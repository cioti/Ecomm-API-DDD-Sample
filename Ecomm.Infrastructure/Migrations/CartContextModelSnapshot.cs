// <auto-generated />
using System;
using Ecomm.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecomm.Infrastructure.Migrations
{
    [DbContext(typeof(CartContext))]
    partial class CartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Ecomm.Domain.Entities.CartDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartDiscounts");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CartId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("BLOB");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartItemDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CartItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CartItemId");

                    b.ToTable("CartItemDiscounts");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartDiscount", b =>
                {
                    b.HasOne("Ecomm.Domain.Entities.ShoppingCart", null)
                        .WithMany("Discounts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Ecomm.Domain.ValueObjects.Percentage", "Percentage", b1 =>
                        {
                            b1.Property<Guid>("CartDiscountId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Value")
                                .HasColumnType("REAL")
                                .HasColumnName("Percentage");

                            b1.HasKey("CartDiscountId");

                            b1.ToTable("CartDiscounts");

                            b1.WithOwner()
                                .HasForeignKey("CartDiscountId");
                        });

                    b.Navigation("Percentage");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("Ecomm.Domain.Entities.ShoppingCart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Ecomm.Domain.ValueObjects.Money", "UnitPrice", b1 =>
                        {
                            b1.Property<int>("CartItemId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Currency")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("TEXT")
                                .HasColumnName("Money");

                            b1.HasKey("CartItemId");

                            b1.ToTable("CartItems");

                            b1.WithOwner()
                                .HasForeignKey("CartItemId");
                        });

                    b.Navigation("UnitPrice");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartItemDiscount", b =>
                {
                    b.HasOne("Ecomm.Domain.Entities.CartItem", null)
                        .WithMany("Discounts")
                        .HasForeignKey("CartItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Ecomm.Domain.ValueObjects.Percentage", "Percentage", b1 =>
                        {
                            b1.Property<Guid>("CartItemDiscountId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Value")
                                .HasColumnType("REAL")
                                .HasColumnName("Percentage");

                            b1.HasKey("CartItemDiscountId");

                            b1.ToTable("CartItemDiscounts");

                            b1.WithOwner()
                                .HasForeignKey("CartItemDiscountId");
                        });

                    b.Navigation("Percentage");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.ShoppingCart", b =>
                {
                    b.OwnsOne("Ecomm.Domain.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<Guid>("ShoppingCartId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("CreatedDate");

                            b1.Property<string>("ModifiedBy")
                                .HasColumnType("TEXT")
                                .HasColumnName("ModifiedBy");

                            b1.Property<DateTime?>("ModifiedDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("ModifiedDate");

                            b1.HasKey("ShoppingCartId");

                            b1.ToTable("ShoppingCarts");

                            b1.WithOwner()
                                .HasForeignKey("ShoppingCartId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.CartItem", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Ecomm.Domain.Entities.ShoppingCart", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
